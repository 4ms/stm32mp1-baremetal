From a473ef7f04c60d7a4a878a50890730cb0e788b40 Mon Sep 17 00:00:00 2001
From: "neeraj.dantu" <neeraj.dantu@octavosystems.com>
Date: Tue, 22 Sep 2020 17:30:17 -0500
Subject: [PATCH 2/4] Add OSD32MP1-BRK features and fix formatting

---
 ...tsi => stm32mp15-osd32mp1-ddr3-1x4Gb.dtsi} |   0
 arch/arm/dts/stm32mp157c-osd32mp1-brk.dts     | 667 ++++++++++++++----
 2 files changed, 539 insertions(+), 128 deletions(-)
 rename arch/arm/dts/{osd32mp1.dtsi => stm32mp15-osd32mp1-ddr3-1x4Gb.dtsi} (100%)

diff --git a/arch/arm/dts/osd32mp1.dtsi b/arch/arm/dts/stm32mp15-osd32mp1-ddr3-1x4Gb.dtsi
similarity index 100%
rename from arch/arm/dts/osd32mp1.dtsi
rename to arch/arm/dts/stm32mp15-osd32mp1-ddr3-1x4Gb.dtsi
diff --git a/arch/arm/dts/stm32mp157c-osd32mp1-brk.dts b/arch/arm/dts/stm32mp157c-osd32mp1-brk.dts
index 51eff6e221..d763b48945 100644
--- a/arch/arm/dts/stm32mp157c-osd32mp1-brk.dts
+++ b/arch/arm/dts/stm32mp157c-osd32mp1-brk.dts
@@ -1,7 +1,6 @@
 /* SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause) */
 /*
- * Copyright (C) STMicroelectronics 2020 - All Rights Reserved
- * Author: STM32CubeMX code generation for STMicroelectronics.
+ * Copyright (C) Octavo Systems LLC 2020 - All Rights Reserved
  */
 
 /* For more information on Device Tree configuration, please refer to
@@ -15,11 +14,8 @@
 #include "stm32mp15xc.dtsi"
 #include "stm32mp15xxac-pinctrl.dtsi"
 #include "stm32mp157-m4-srm.dtsi"
-
-/* USER CODE BEGIN includes */
 #include <dt-bindings/mfd/st,stpmic1.h>
 #include <dt-bindings/rtc/rtc-stm32.h>
-/* USER CODE END includes */
 
 / {
 	model = "Octavo OSD32MP1 BRK board";
@@ -28,9 +24,6 @@
 	memory@c0000000 {
 		device_type = "memory";
 		reg = <0xc0000000 0x20000000>;
-
-		/* USER CODE BEGIN memory */
-		/* USER CODE END memory */
 	};
 
 	reserved-memory {
@@ -38,8 +31,6 @@
 		#size-cells = <1>;
 		ranges;
 
-		/* USER CODE BEGIN reserved-memory */
-
 		mcuram2:mcuram2@10000000{
 			compatible = "shared-dma-pool";
 			reg = <0x10000000 0x40000>;
@@ -86,11 +77,8 @@
 			no-map;
 			status = "okay";
 		};
-		/* USER CODE END reserved-memory */
 	};
 
-	/* USER CODE BEGIN root */
-
 	led{
 		compatible = "gpio-leds";
 
@@ -101,21 +89,21 @@
 			status = "okay";
 			default-state = "off";
 		};
-		
+
 		green1{
 			label = "LED1_GRN";
 			gpios = <&gpioz 7 GPIO_ACTIVE_LOW>;
 			status = "okay";
 			default-state = "on";
 		};
-		
+
 		red2{
 			label = "LED2_RED";
 			gpios = <&gpioi 8 GPIO_ACTIVE_LOW>;
 			status = "okay";
 			default-state = "off";
 		};
-				
+
 		green2{
 			label = "LED2_GRN";
 			gpios = <&gpioi 9 GPIO_ACTIVE_LOW>;
@@ -143,21 +131,19 @@
 	};
 
 	aliases{
-		ethernet0 = &ethernet0;
 		serial0 = &uart4;
+    serial2 = &usart2;
+    serial5 = &uart5;
+    serial7 = &uart7;
+    serial1 = &uart8;
 	};
 
 	chosen{
 		stdout-path = "serial0:115200n8";
 	};
 
-	/* USER CODE END root */
-
 	clocks {
 
-		/* USER CODE BEGIN clocks */
-		/* USER CODE END clocks */
-
 #ifndef CONFIG_STM32MP1_TRUSTED
 		clk_lsi: clk-lsi {
 			clock-frequency = <32000>;
@@ -182,18 +168,319 @@
 &pinctrl {
 	u-boot,dm-pre-reloc;
 
-	rtc_pins_mx: rtc_mx-0 {
+  i2c1_pins_mx: i2c1-0 {
 		pins {
-			pinmux = <STM32_PINMUX('I', 8, ANALOG)>; /* RTC_LSCO */
+			pinmux = <STM32_PINMUX('H', 11, AF5)>, /* I2C1_SCL */
+				 <STM32_PINMUX('H', 12, AF5)>; /* I2C1_SDA */
+			bias-disable;
+			drive-open-drain;
+			slew-rate = <0>;
 		};
 	};
 
-	rtc_sleep_pins_mx: rtc_sleep_mx-0 {
+	i2c1_pins_sleep_mx: i2c1-1 {
 		pins {
-			pinmux = <STM32_PINMUX('I', 8, ANALOG)>; /* RTC_LSCO */
+			pinmux = <STM32_PINMUX('H', 11, ANALOG)>, /* I2C1_SCL */
+				 <STM32_PINMUX('H', 12, ANALOG)>; /* I2C1_SDA */
 		};
 	};
 
+  i2c2_pins_mx: i2c2-0 {
+    pins {
+      pinmux = <STM32_PINMUX('F', 1, AF4)>, /* I2C2_SCL */
+         <STM32_PINMUX('G', 15, AF4)>; /* I2C2_SDA */
+      bias-disable;
+      drive-open-drain;
+      slew-rate = <0>;
+    };
+  };
+
+  i2c2_pins_sleep_mx: i2c2-1 {
+    pins {
+      pinmux = <STM32_PINMUX('F', 1, ANALOG)>, /* I2C2_SCL */
+         <STM32_PINMUX('G', 15, ANALOG)>; /* I2C2_SDA */
+    };
+  };
+
+  i2c5_pins_mx: i2c5-0 {
+    pins {
+      pinmux = <STM32_PINMUX('D', 1, AF4)>, /* I2C5_SCL */
+         <STM32_PINMUX('D', 0, AF4)>; /* I2C5_SDA */
+      bias-disable;
+      drive-open-drain;
+      slew-rate = <0>;
+    };
+  };
+
+  i2c5_pins_sleep_mx: i2c5-1 {
+    pins {
+      pinmux = <STM32_PINMUX('D', 1, ANALOG)>, /* I2C5_SCL */
+         <STM32_PINMUX('D', 0, ANALOG)>; /* I2C5_SDA */
+    };
+  };
+
+  spi2_pins_mx: spi2-0 {
+    pins1 {
+      pinmux = <STM32_PINMUX('I', 1, AF5)>, /* SPI2_SCK */
+         <STM32_PINMUX('I', 3, AF5)>; /* SPI2_MOSI */
+      bias-disable;
+      drive-push-pull;
+      slew-rate = <1>;
+    };
+
+    pins2 {
+      pinmux = <STM32_PINMUX('I', 2, AF5)>; /* SPI2_MISO */
+      bias-disable;
+    };
+  };
+
+  spi2_sleep_pins_mx: spi2-sleep-0 {
+    pins {
+      pinmux = <STM32_PINMUX('I', 1, ANALOG)>, /* SPI2_SCK */
+         <STM32_PINMUX('I', 2, ANALOG)>, /* SPI2_MISO */
+         <STM32_PINMUX('I', 3, ANALOG)>; /* SPI2_MOSI */
+    };
+  };
+
+  spi4_pins_mx: spi4-0 {
+    pins1 {
+      pinmux = <STM32_PINMUX('E', 12, AF5)>, /* SPI4_SCK */
+         <STM32_PINMUX('E', 14, AF5)>; /* SPI4_MOSI */
+      bias-disable;
+      drive-push-pull;
+      slew-rate = <1>;
+    };
+
+    pins2 {
+      pinmux = <STM32_PINMUX('E', 13, AF5)>; /* SPI4_MISO */
+      bias-disable;
+    };
+  };
+
+  spi4_sleep_pins_mx: spi4-sleep-0 {
+    pins {
+      pinmux = <STM32_PINMUX('E', 12, ANALOG)>, /* SPI2_SCK */
+         <STM32_PINMUX('E', 13, ANALOG)>, /* SPI2_MISO */
+         <STM32_PINMUX('E', 14, ANALOG)>; /* SPI2_MOSI */
+    };
+  };
+
+  usart2_pins_mx: usart2-0 {
+      pins1 {
+        pinmux = <STM32_PINMUX('F', 5, AF7)>; /* USART2_TX */
+        bias-disable;
+        drive-push-pull;
+        slew-rate = <0>;
+      };
+      pins2 {
+        pinmux = <STM32_PINMUX('F', 4, AF7)>; /* USART2_RX */
+        bias-disable;
+      };
+    };
+
+    usart2_idle_pins_mx: usart2-idle-0 {
+      pins1 {
+        pinmux = <STM32_PINMUX('F', 5, ANALOG)>; /* USART2_TX */
+      };
+      pins2 {
+        pinmux = <STM32_PINMUX('F', 4, AF7)>; /* USART2_RX */
+        bias-disable;
+      };
+    };
+
+    usart2_sleep_pins_mx: usart2-sleep-0 {
+      pins {
+        pinmux = <STM32_PINMUX('F', 5, ANALOG)>, /* USART2_TX */
+           <STM32_PINMUX('F', 4, ANALOG)>; /* USART2_RX */
+      };
+    };
+
+    uart5_pins_mx: uart5-0 {
+      pins1 {
+        pinmux = <STM32_PINMUX('B', 13, AF14)>; /* USART5_TX */
+        bias-disable;
+        drive-push-pull;
+        slew-rate = <0>;
+      };
+      pins2 {
+        pinmux = <STM32_PINMUX('B', 12, AF14)>; /* USART5_RX */
+        bias-disable;
+      };
+    };
+
+    uart5_idle_pins_mx: uart5-idle-0 {
+      pins1 {
+        pinmux = <STM32_PINMUX('B', 13, ANALOG)>; /* USART5_TX */
+      };
+      pins2 {
+        pinmux = <STM32_PINMUX('B', 12, AF14)>; /* USART5_RX */
+        bias-disable;
+      };
+    };
+
+    uart5_sleep_pins_mx: uart5-sleep-0 {
+      pins {
+        pinmux = <STM32_PINMUX('B', 13, ANALOG)>, /* USART5_TX */
+           <STM32_PINMUX('B', 12, ANALOG)>; /* USART5_RX */
+      };
+    };
+
+    uart7_pins_mx: uart7-0 {
+      pins1 {
+        pinmux = <STM32_PINMUX('A', 15, AF13)>; /* USART7_TX */
+        bias-disable;
+        drive-push-pull;
+        slew-rate = <0>;
+      };
+      pins2 {
+        pinmux = <STM32_PINMUX('B', 3, AF13)>; /* USART7_RX */
+        bias-disable;
+      };
+    };
+
+  uart7_idle_pins_mx: uart7-idle-0 {
+    pins1 {
+      pinmux = <STM32_PINMUX('A', 15, ANALOG)>; /* USART7_TX */
+    };
+    pins2 {
+      pinmux = <STM32_PINMUX('B', 3, AF13)>; /* USART7_RX */
+      bias-disable;
+    };
+  };
+
+  uart7_sleep_pins_mx: uart7-sleep-0 {
+    pins {
+      pinmux = <STM32_PINMUX('A', 15, ANALOG)>, /* USART7_TX */
+        <STM32_PINMUX('B', 3, ANALOG)>; /* USART7_RX */
+    };
+  };
+
+  uart8_pins_mx: uart8-0 {
+    pins1 {
+      pinmux = <STM32_PINMUX('E', 1, AF8)>; /* USART8_TX */
+      bias-disable;
+      drive-push-pull;
+      slew-rate = <0>;
+    };
+    pins2 {
+      pinmux = <STM32_PINMUX('E', 0, AF8)>; /* USART8_RX */
+      bias-disable;
+    };
+  };
+
+  uart8_idle_pins_mx: uart8-idle-0 {
+    pins1 {
+      pinmux = <STM32_PINMUX('E', 1, ANALOG)>; /* USART8_TX */
+    };
+    pins2 {
+      pinmux = <STM32_PINMUX('E', 0, AF8)>; /* USART8_RX */
+      bias-disable;
+    };
+  };
+
+  uart8_sleep_pins_mx: uart8-sleep-0 {
+    pins {
+      pinmux = <STM32_PINMUX('E', 1, ANALOG)>, /* USART8_TX */
+        <STM32_PINMUX('E', 0, ANALOG)>; /* USART8_RX */
+    };
+  };
+
+  m_can1_pins_mx: m-can1-0 {
+    pins1 {
+      pinmux = <STM32_PINMUX('H', 13, AF9)>; /* CAN1_TX */
+      slew-rate = <0>;
+      drive-push-pull;
+      bias-disable;
+    };
+    pins2 {
+      pinmux = <STM32_PINMUX('H', 14, AF9)>; /* CAN1_RX */
+      bias-disable;
+    };
+  };
+
+  m_can1_sleep_pins_mx: m_can1-sleep@0 {
+    pins {
+      pinmux = <STM32_PINMUX('H', 13, ANALOG)>, /* CAN1_TX */
+        <STM32_PINMUX('H', 14, ANALOG)>; /* CAN1_RX */
+    };
+  };
+
+  pwm1_pins_mx: pwm1-0 {
+    pins {
+      pinmux = <STM32_PINMUX('A', 9, AF1)>; /* TIM1_CH2 */
+      bias-pull-down;
+      drive-push-pull;
+      slew-rate = <0>;
+    };
+  };
+
+  pwm1_sleep_pins_mx: pwm1-sleep-0 {
+    pins {
+      pinmux = <STM32_PINMUX('A', 9, ANALOG)>; /* TIM1_CH1 */
+    };
+  };
+
+  pwm3_pins_mx: pwm3-0 {
+    pins {
+      pinmux = <STM32_PINMUX('B', 5, AF2)>; /* TIM3_CH2 */
+      bias-pull-down;
+      drive-push-pull;
+      slew-rate = <0>;
+    };
+  };
+
+  pwm3_sleep_pins_mx: pwm3-sleep-0 {
+    pins {
+      pinmux = <STM32_PINMUX('B', 5, ANALOG)>; /* TIM3_CH2 */
+    };
+  };
+
+  pwm4_pins_mx: pwm4-0 {
+    pins {
+      pinmux = <STM32_PINMUX('B', 7, AF2)>; /* TIM4_CH2 */
+      bias-pull-down;
+      drive-push-pull;
+      slew-rate = <0>;
+    };
+  };
+
+  pwm4_sleep_pins_mx: pwm4-sleep-0 {
+    pins {
+      pinmux = <STM32_PINMUX('B', 7, ANALOG)>; /* TIM4_CH2 */
+    };
+  };
+
+  pwm8_pins_mx: pwm8-0 {
+    pins {
+      pinmux = <STM32_PINMUX('I', 6, AF3)>; /* TIM8_CH2 */
+      bias-pull-down;
+      drive-push-pull;
+      slew-rate = <0>;
+    };
+  };
+
+  pwm8_sleep_pins_mx: pwm8-sleep-0 {
+    pins {
+      pinmux = <STM32_PINMUX('I', 6, ANALOG)>; /* TIM8_CH2 */
+    };
+  };
+
+
+  pwm12_pins_mx: pwm12-0 {
+    pins {
+      pinmux = <STM32_PINMUX('H', 9, AF2)>; /* TIM12_CH2 */
+      bias-pull-down;
+      drive-push-pull;
+      slew-rate = <0>;
+    };
+  };
+
+  pwm12_sleep_pins_mx: pwm12-sleep-0 {
+    pins {
+      pinmux = <STM32_PINMUX('H', 9, ANALOG)>; /* TIM12_CH2 */
+    };
+  };
+
 	sdmmc1_pins_mx: sdmmc1_mx-0 {
 		u-boot,dm-pre-reloc;
 		pins1 {
@@ -262,7 +549,8 @@
 		pins1 {
 			u-boot,dm-pre-reloc;
 			pinmux = <STM32_PINMUX('B', 2, AF8)>; /* UART4_RX */
-			bias-disable;
+      /* pull-up on rx to avoid floating level */
+      bias-pull-up;
 		};
 		pins2 {
 			u-boot,dm-pre-reloc;
@@ -281,9 +569,6 @@
 					 <STM32_PINMUX('G', 11, ANALOG)>; /* UART4_TX */
 		};
 	};
-
-	/* USER CODE BEGIN pinctrl */
-	/* USER CODE END pinctrl */
 };
 
 &pinctrl_z {
@@ -310,8 +595,28 @@
 		};
 	};
 
-	/* USER CODE BEGIN pinctrl_z */
-	/* USER CODE END pinctrl_z */
+  spi6_pins_mx: spi6-0 {
+    pins1 {
+      pinmux = <STM32_PINMUX('Z', 0, AF8)>, /* SPI6_SCK */
+         <STM32_PINMUX('Z', 2, AF8)>; /* SPI6_MOSI */
+      bias-disable;
+      drive-push-pull;
+      slew-rate = <1>;
+    };
+
+    pins2 {
+      pinmux = <STM32_PINMUX('Z', 1, AF8)>; /* SPI6_MISO */
+      bias-disable;
+    };
+  };
+
+  spi6_sleep_pins_mx: spi6-sleep-0 {
+    pins {
+      pinmux = <STM32_PINMUX('Z', 0, ANALOG)>, /* SPI6_SCK */
+         <STM32_PINMUX('Z', 1, ANALOG)>, /* SPI6_MISO */
+         <STM32_PINMUX('Z', 2, ANALOG)>; /* SPI6_MOSI */
+    };
+  };
 };
 
 &m4_rproc{
@@ -319,52 +624,39 @@
 	mboxes = <&ipcc 0>, <&ipcc 1>, <&ipcc 2>;
 	mbox-names = "vq0", "vq1", "shutdown";
 	status = "okay";
-
-	/* USER CODE BEGIN m4_rproc */
 	memory-region = <&retram>, <&mcuram>, <&mcuram2>, <&vdev0vring0>,
 			<&vdev0vring1>, <&vdev0buffer>;
 	interrupt-parent = <&exti>;
 	interrupts = <68 1>;
 	wakeup-source;
-	/* USER CODE END m4_rproc */
+};
+
+&pwr_regulators {
+	vdd-supply = <&vdd>;
+	vdd_3v3_usbfs-supply = <&vdd_usb>;
 };
 
 &bsec{
 	status = "okay";
-
-	/* USER CODE BEGIN bsec */
-	/* USER CODE END bsec */
 };
 
 &crc1{
 	status = "okay";
-
-	/* USER CODE BEGIN crc1 */
-	/* USER CODE END crc1 */
 };
 
 &cryp1{
 	u-boot,dm-pre-reloc;
 	status = "okay";
-
-	/* USER CODE BEGIN cryp1 */
-	/* USER CODE END cryp1 */
 };
 
 &dma1{
 	status = "okay";
-
-	/* USER CODE BEGIN dma1 */
 	sram = <&dma_pool>;
-	/* USER CODE END dma1 */
 };
 
 &dma2{
 	status = "okay";
-
-	/* USER CODE BEGIN dma2 */
 	sram = <&dma_pool>;
-	/* USER CODE END dma2 */
 };
 
 &dmamux1{
@@ -373,39 +665,57 @@
 	dma-channels = <16>;
 
 	status = "okay";
-
-	/* USER CODE BEGIN dmamux1 */
-	/* USER CODE END dmamux1 */
 };
 
 &dts{
 	status = "okay";
-
-	/* USER CODE BEGIN dts */
-	/* USER CODE END dts */
 };
 
 &gpu{
 	status = "okay";
-
-	/* USER CODE BEGIN gpu */
 	contiguous-area = <&gpu_reserved>;
-	/* USER CODE END gpu */
 };
 
 &hash1{
 	u-boot,dm-pre-reloc;
 	status = "okay";
-
-	/* USER CODE BEGIN hash1 */
-	/* USER CODE END hash1 */
 };
 
 &hsem{
 	status = "okay";
+};
+
+&i2c1 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&i2c1_pins_mx>;
+	pinctrl-1 = <&i2c1_pins_sleep_mx>;
+	i2c-scl-rising-time-ns = <100>;
+	i2c-scl-falling-time-ns = <7>;
+	status = "okay";
+	/delete-property/dmas;
+	/delete-property/dma-names;
+};
+
+&i2c2 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&i2c2_pins_mx>;
+	pinctrl-1 = <&i2c2_pins_sleep_mx>;
+	i2c-scl-rising-time-ns = <100>;
+	i2c-scl-falling-time-ns = <7>;
+	status = "okay";
+	/delete-property/dmas;
+	/delete-property/dma-names;
+};
 
-	/* USER CODE BEGIN hsem */
-	/* USER CODE END hsem */
+&i2c5 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&i2c5_pins_mx>;
+	pinctrl-1 = <&i2c5_pins_sleep_mx>;
+	i2c-scl-rising-time-ns = <100>;
+	i2c-scl-falling-time-ns = <7>;
+	status = "okay";
+	/delete-property/dmas;
+	/delete-property/dma-names;
 };
 
 &i2c4{
@@ -415,10 +725,9 @@
 	pinctrl-1 = <&i2c4_sleep_pins_z_mx>;
 	status = "okay";
 
-	/* USER CODE BEGIN i2c4 */
 	i2c-scl-rising-time-ns = <185>;
 	i2c-scl-falling-time-ns = <20>;
-	clock-frequency = <100000>;
+	clock-frequency = <400000>;
 	/delete-property/ dmas;
 	/delete-property/ dma-names;
 
@@ -573,55 +882,32 @@
 		reg = <0x50>;
 		pagesize = <16>;
 	};
-	/* USER CODE END i2c4 */
 };
 
 &ipcc{
 	status = "okay";
-
-	/* USER CODE BEGIN ipcc */
-	/* USER CODE END ipcc */
 };
 
 &iwdg2{
 	status = "okay";
-
-	/* USER CODE BEGIN iwdg2 */
 	timeout-sec = <32>;
-	/* USER CODE END iwdg2 */
 };
 
 &mdma1{
 	status = "okay";
-
-	/* USER CODE BEGIN mdma1 */
-	/* USER CODE END mdma1 */
 };
 
 &rcc{
 	u-boot,dm-pre-reloc;
 	status = "okay";
-
-	/* USER CODE BEGIN rcc */
-	/* USER CODE END rcc */
 };
 
 &rng1{
 	status = "okay";
-
-	/* USER CODE BEGIN rng1 */
-	/* USER CODE END rng1 */
 };
 
 &rtc{
-	pinctrl-names = "default", "sleep";
-	pinctrl-0 = <&rtc_pins_mx>;
-	pinctrl-1 = <&rtc_sleep_pins_mx>;
 	status = "okay";
-
-	/* USER CODE BEGIN rtc */
-	st,lsco = <RTC_OUT2_RMP>;
-	/* USER CODE END rtc */
 };
 
 &sdmmc1{
@@ -632,20 +918,15 @@
 	pinctrl-2 = <&sdmmc1_sleep_pins_mx>;
 	status = "okay";
 
-	/* USER CODE BEGIN sdmmc1 */
 	cd-gpios = <&gpiog 7 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
 	disable-wp;
 	st,neg-edge;
 	bus-width = <4>;
 	vmmc-supply = <&v3v3>;
-	/* USER CODE END sdmmc1 */
 };
 
 &tamp{
 	status = "okay";
-
-	/* USER CODE BEGIN tamp */
-	/* USER CODE END tamp */
 };
 
 &uart4{
@@ -655,78 +936,63 @@
 	pinctrl-1 = <&uart4_sleep_pins_mx>;
 	status = "okay";
 
-	/* USER CODE BEGIN uart4 */
 	/delete-property/ dmas;
 	/delete-property/ dma-names;
-	/* USER CODE END uart4 */
 };
 
 &usbh_ehci{
 	status = "okay";
-
-	/* USER CODE BEGIN usbh_ehci */
 	phys = <&usbphyc_port0>;
-	/* USER CODE END usbh_ehci */
 };
 
 &usbh_ohci{
 	status = "okay";
-
-	/* USER CODE BEGIN usbh_ohci */
-	/* USER CODE END usbh_ohci */
 };
 
 &usbotg_hs{
 	u-boot,dm-pre-reloc;
 	status = "okay";
-
-	/* USER CODE BEGIN usbotg_hs */
 	phys = <&usbphyc_port1 0>;
 	phy-names = "usb2-phy";
-	/* USER CODE END usbotg_hs */
 };
 
 &usbphyc{
 	u-boot,dm-pre-reloc;
 	status = "okay";
-
-	/* USER CODE BEGIN usbphyc */
-	/* USER CODE END usbphyc */
 };
 
 &usbphyc_port0{
 	u-boot,dm-pre-reloc;
 	status = "okay";
-
-	/* USER CODE BEGIN usbphyc_port0 */
 	phy-supply = <&vdd_usb>;
 	st,phy-tuning = <&usb_phy_tuning>;
-	/* USER CODE END usbphyc_port0 */
 };
 
 &usbphyc_port1{
 	u-boot,dm-pre-reloc;
 	status = "okay";
-
-	/* USER CODE BEGIN usbphyc_port1 */
 	phy-supply = <&vdd_usb>;
 	st,phy-tuning = <&usb_phy_tuning>;
-	/* USER CODE END usbphyc_port1 */
-};
-
-&vrefbuf{
-	status = "okay";
-
-	/* USER CODE BEGIN vrefbuf */
-	regulator-min-microvolt = <2500000>;
-	regulator-max-microvolt = <2500000>;
-	vdda-supply = <&vdd>;
-	/* USER CODE END vrefbuf */
 };
 
-/* USER CODE BEGIN addons */
 &adc {
-	status = "disabled";
+  vdd-supply = <&vdd>;
+  vdda-supply = <&vdda>;
+  vref-supply = <&vdda>;
+	status = "okay";
+  adc1: adc@0 {
+    st,min-sample-time-nsecs = <5000>;
+    st,adc-channels = <0 1>;
+    status = "okay";
+  };
+
+  adc2: adc@100 {
+    status = "okay";
+  };
+
+  adc_temp: temp {
+    status = "okay";
+  };
 };
 
 &usbh_ohci{
@@ -742,7 +1008,6 @@
 };
 
 &sram{
-
 	dma_pool:dma_pool@0{
 		reg = <0x50000 0x10000>;
 		pool;
@@ -752,5 +1017,151 @@
 &optee{
 	status = "okay";
 };
-/* USER CODE END addons */
 
+&spi2 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&spi2_pins_mx>;
+	pinctrl-1 = <&spi2_sleep_pins_mx>;
+  cs-gpios = <&gpioi 0 0>;
+	status = "okay";
+
+  spidev2: spidev2@0{
+    compatible = "rohm,dh2228fv";
+    spi-max-frequency = <30000000>;
+    reg = <0>;
+  };
+};
+
+&spi4 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&spi4_pins_mx>;
+	pinctrl-1 = <&spi4_sleep_pins_mx>;
+  cs-gpios = <&gpioe 11 0>;
+	status = "okay";
+
+  spidev4: spidev4@0{
+    compatible = "rohm,dh2228fv";
+    spi-max-frequency = <30000000>;
+    reg = <0>;
+  };
+};
+
+&spi6 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&spi6_pins_mx>;
+	pinctrl-1 = <&spi6_sleep_pins_mx>;
+  cs-gpios = <&gpioz 3 0>;
+	status = "okay";
+
+  spidev6: spidev6@0{
+    compatible = "rohm,dh2228fv";
+    spi-max-frequency = <30000000>;
+    reg = <0>;
+  };
+};
+
+&usart2 {
+	pinctrl-names = "default", "sleep", "idle";
+	pinctrl-0 = <&usart2_pins_mx>;
+	pinctrl-1 = <&usart2_sleep_pins_mx>;
+	pinctrl-2 = <&usart2_idle_pins_mx>;
+	status = "okay";
+};
+
+&uart5 {
+	pinctrl-names = "default", "sleep", "idle";
+	pinctrl-0 = <&uart5_pins_mx>;
+	pinctrl-1 = <&uart5_sleep_pins_mx>;
+	pinctrl-2 = <&uart5_idle_pins_mx>;
+	status = "okay";
+};
+
+&uart7 {
+	pinctrl-names = "default", "sleep", "idle";
+	pinctrl-0 = <&uart7_pins_mx>;
+	pinctrl-1 = <&uart7_sleep_pins_mx>;
+	pinctrl-2 = <&uart7_idle_pins_mx>;
+	status = "okay";
+};
+
+&uart8 {
+	pinctrl-names = "default", "sleep", "idle";
+	pinctrl-0 = <&uart8_pins_mx>;
+	pinctrl-1 = <&uart8_sleep_pins_mx>;
+	pinctrl-2 = <&uart8_idle_pins_mx>;
+	status = "okay";
+};
+
+&m_can1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&m_can1_pins_mx>;
+	status = "okay";
+  can-transceiver {
+    max-bitrate = <5000000>;
+  };
+};
+
+&timers1 {
+	status = "okay";
+	/* spare dmas for other usage */
+	/delete-property/dmas;
+	/delete-property/dma-names;
+	pwm1: pwm {
+    pinctrl-names = "default", "sleep";
+	  pinctrl-0 = <&pwm1_pins_mx>;
+	  pinctrl-1 = <&pwm1_sleep_pins_mx>;
+		status = "okay";
+	};
+};
+
+&timers3 {
+	status = "okay";
+	/* spare dmas for other usage */
+	/delete-property/dmas;
+	/delete-property/dma-names;
+	pwm3: pwm {
+    pinctrl-names = "default", "sleep";
+	  pinctrl-0 = <&pwm3_pins_mx>;
+	  pinctrl-1 = <&pwm3_sleep_pins_mx>;
+		status = "okay";
+	};
+};
+
+&timers4 {
+	status = "okay";
+	/* spare dmas for other usage */
+	/delete-property/dmas;
+	/delete-property/dma-names;
+	pwm4: pwm {
+    pinctrl-names = "default", "sleep";
+	  pinctrl-0 = <&pwm4_pins_mx>;
+	  pinctrl-1 = <&pwm4_sleep_pins_mx>;
+		status = "okay";
+	};
+};
+
+&timers8 {
+	status = "okay";
+	/* spare dmas for other usage */
+	/delete-property/dmas;
+	/delete-property/dma-names;
+	pwm8: pwm {
+    pinctrl-names = "default", "sleep";
+	  pinctrl-0 = <&pwm8_pins_mx>;
+	  pinctrl-1 = <&pwm8_sleep_pins_mx>;
+		status = "okay";
+	};
+};
+
+&timers12 {
+	status = "okay";
+	/* spare dmas for other usage */
+	/delete-property/dmas;
+	/delete-property/dma-names;
+	pwm12: pwm {
+    pinctrl-names = "default", "sleep";
+	  pinctrl-0 = <&pwm12_pins_mx>;
+	  pinctrl-1 = <&pwm12_sleep_pins_mx>;
+		status = "okay";
+	};
+};
-- 
2.17.1

